find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
swirld
swirl
swirl()
librar("swirl")
library("swirl")
swirl()
head(flags)
dim(flags)
play()
viewinfo(flags)
viewinfo()
nxt()
class(flags)
cls_list <- lapply(flags, classs)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
play()
cls_list
cls_vect
nxt()
sum(flags["orange"])
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, funcion(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
?table
table(flags["animate"])
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?irir
?iris
iris
df <- iris
df
sapply(df,mean)
tapply(df$Sepal.Length, df$Species, mean)
apply(iris[1:4], mean)
sapply(iris[1:4], mean)
sapply(iris[,1:4], mean)
apply(iris[,1:4], 1, mean)
colMeans(iris)
colMeans(df)
apply(iris, 1, mean)
apply(iris[, 1:4, 2, mean])
apply(iris[, 1:4], 2, mean)
sapply(iris[, 1:4], mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
apply(mtcars, 2 mean)
apply(mtcars, 2, mean)
mtcars$hp
mtcars$hp
split(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[3]
tapply(mtcars$hp, mtcars$cyl, mean)[3]-tapply(mtcars$hp, mtcars$cyl, mean)[1]
debug(ls)
ls
debug(ls)
ls(x)
quit
quit9
quit()
ls
0
exit
q
q
q
ls9
ls()
ls(x)
q
q
q
q
q
q
q
q
q
df
sapply(iris[,1:4], mean)
apply(iris, 2, mean)
QQ
setwd("C:/Users/steve/Desktop/Data Science Specialization - JHU/05 Reproducible Research/Week3")
sessionInfo()
library(swirl)
sessionInfo()
setwd("..")
dir()
library(cacher)
install.packages("cacher")
dir()
setwd("Project - Week 4")
dir()
exists("~/data")
exists("~/new folder")
exists("~/New folder")
exists("~/data")
exists("/data")
exists("/data/")
exists("data/")
exists("~/data/")
exists("./data/")
exists("./data")
dir.exists("data/")
dir.exists("data2/")
if (!dir.exist("data/")) {
dir.create("data/")
}
if (!dir.exists("data/")) {
dir.create("data/")
}
download.file(url="https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", destfile="data/weather", mode="wb")
download.file(url="https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
destfile="data/StormData.bz2", mode="wb")
raw <- read.table(file="data/StormData.bz2")
raw <- read.table(file="data/StormData.bz2", header=TRUE, sep=",")
head(raw)
names(raw)
str(raw)
head(raw$BGN_DATE)
tail(raw$BGN_DATE)
class(raw)
sum(is.na(raw))
dim(raw)
902297*37
nrow(raw)*ncol(raw)
sum(is.na(raw))/nrow(raw)*ncol(raw)*100
sum(is.na(raw))
sum(is.na(raw))/(nrow(raw)*ncol(raw))*100
paste("hi","Steve")
paste0("hi","Steve")
# ---- CLEAN DATA ----
# Check for NAs
print(paste0("",sum(is.na(raw))/(nrow(raw)*ncol(raw))*100,"%"))
paste("hi","Steve")
sum(is.na(raw))/(nrow(raw)*ncol(raw))*100
round(sum(is.na(raw))/(nrow(raw)*ncol(raw))*100, 2)
round(sum(is.na(raw))/(nrow(raw)*ncol(raw))*100, 1)
# ---- CLEAN DATA ----
# Check for NAs
print(paste0("",round(sum(is.na(raw))/(nrow(raw)*ncol(raw))*100, 1),"%"))
print(paste0("Percentage of NAs in the raw data frame: ",
round(sum(is.na(raw))/(nrow(raw)*ncol(raw))*100, 1),"%"))
library(dplyr)
library(ggplot2)
library(knitr)
names(raw)
head(raw$EVTYPE)
head(raw$BGN_DATE)
head(raw$END_DATE)
tail(raw$BGN_DATE)
names(raw)
head(raw[,1:5])
unique(raw$STATE)
unique(raw$STATE__)
head(raw[,6:10])
unique(raw$BGN_AZI)
head(raw[,11:20])
unique(raw$BGN_LOCATI)
head(raw[,11:20])
head(raw[,21:30])
head(raw[,31:])
head(raw[,31:40])
head(raw[,31:38])
head(raw[,31:37])
names(raw)
class(raw)
keep <- c("REFNUM", "EVTYPE", "LENGTH", "WIDTH", "F", "MAG", "FATALITIES", "INJURIES",
"PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP", "WFO", "REMARKS")
select(raw, keep)
head(raw$REFNUM)
head(raw$EVTYPE)
head(raw$LENGTH)
head(raw$WIDTH)
head(raw$F)
head(raw$MAG)
raw[raw$EVTYPE=="TORNADO"]
raw[raw$EVTYPE=="TORNADO",]
head(raw[raw$EVTYPE=="TORNADO",])
tail(raw[raw$EVTYPE=="TORNADO",])
keep <- c("REFNUM", "EVTYPE", "MAG", "FATALITIES", "INJURIES", "PROPDMG",
"PROPDMGEXP", "CROPDMG", "CROPDMGEXP")
df <- select(raw, keep)
head(df)
keep <- c("REFNUM", "EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP",
"CROPDMG", "CROPDMGEXP")
df <- select(raw, keep)
head(df)
names(raw)
ls()
rm(raw)
ls()
